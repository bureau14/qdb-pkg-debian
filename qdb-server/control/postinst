#!/bin/bash

. /usr/share/debconf/confmodule

USER="qdb"
GROUP="$USER"
ETC_PATH=/etc/qdb
SHARE_PATH=/usr/share/qdb
DB_PATH=/var/lib/qdb
LOG_PATH=/var/log/qdb

# Database
mkdir -p $DB_PATH
chown $USER:$GROUP $DB_PATH

# Log
mkdir -p $LOG_PATH
touch $LOG_PATH/qdbd.log
chown -R $USER:$GROUP $LOG_PATH

# share
mkdir -p $SHARE_PATH
chown -R $USER:$GROUP $SHARE_PATH

# configuration dir
mkdir -p $ETC_PATH

db_input high qdb-server/security
db_go

db_get qdb-server/security

SECURITY_ENABLED=${RET}
echo "security enabled = ${SECURITY_ENABLED}"

if [ ! -f $SHARE_PATH/cluster_public.key ]
then
    echo "Performing new install, initializing cluster keys"

    qdb_cluster_keygen -s $ETC_PATH/cluster_private.key -p $SHARE_PATH/cluster_public.key
    chown $USER:$GROUP $ETC_PATH/cluster_private.key
    chmod 0600 $ETC_PATH/cluster_private.key
    chown $USER:$GROUP $SHARE_PATH/cluster_public.key
    chmod 0644 $SHARE_PATH/cluster_public.key
fi


if [ ! -f $ETC_PATH/qdbsh_private.key ]
then
    # add user for qdbsh
    echo "Creating qdbsh user"
    qdb_user_add -u qdbsh --uid=3 --superuser=0 --privileges=16894 -p $ETC_PATH/users.conf -s $ETC_PATH/qdbsh_private.key

    echo "Creating qdb_rest user"
    qdb_user_add -u qdb_rest --uid=4 --superuser=0 --privileges=16894 -p $ETC_PATH/users.conf -s $ETC_PATH/qdb_rest_private.key

    chmod 0644 $ETC_PATH/users.conf
    chown $USER:$GROUP $ETC_PATH/users.conf

    chmod 0600 $ETC_PATH/qdbsh_private.key
    chown $USER:$GROUP $ETC_PATH/qdbsh_private.key

    chmod 0600 $ETC_PATH/qdb_rest_private.key
    chown $USER:$GROUP $ETC_PATH/qdb_rest_private.key
fi

if [ ! -f $ETC_PATH/qdbd.conf ]
then
    # Config
    echo "Generating default configuration.."
    GEN_CONF_OPTS="--log-directory=$LOG_PATH --storage-engine=rocksdb --rocksdb-root=$DB_PATH"
    if [[ "${SECURITY_ENABLED}" == "true" ]]
    then
        GEN_CONF_OPTS="${GEN_CONF_OPTS} --security=true --cluster-private-file=$ETC_PATH/cluster_private.key --user-list=$ETC_PATH/users.conf"
    else
        GEN_CONF_OPTS="${GEN_CONF_OPTS} --security=false"
    fi
    qdbd --gen-config ${GEN_CONF_OPTS}  > $ETC_PATH/qdbd.conf

    chown $USER:$GROUP $ETC_PATH/qdbd.conf
fi

if [ ! -f $ETC_PATH/qdbd.env ]
then
    echo "Generating placeholder qdbd.env"
    touch $ETC_PATH/qdbd.env
    chown $USER:$GROUP $ETC_PATH/qdbd.env
fi

echo "Setting system control variables"
sysctl -e -q -p /etc/sysctl.d/30-quasardb.conf 2>&1 || true

LOGROTATE_PATH="/etc/logrotate.d"
if [[ -d ${LOGROTATE_PATH} ]]
then
    echo "Setting up logrotate template for qdbd logs"
    cp -f /usr/share/qdb/logrotate.d/qdbd /etc/logrotate.d/qdbd
fi

echo "Setting up systemd"
mkdir -p /usr/lib/systemd/system
cp -f /usr/share/qdb/systemd/qdbd.service /usr/lib/systemd/system/qdbd.service

systemctl daemon-reload 2>&1 || true
systemctl enable qdbd.service 2>&1 || true
systemctl start qdbd.service 2>&1 || true


db_stop
